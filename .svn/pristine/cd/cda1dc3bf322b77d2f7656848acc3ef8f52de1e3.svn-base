package com.ash.myblog23.control;

import com.ash.myblog23.model.User;
import java.util.List;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.PersistenceContext;

/**
 *
 * @author Timmy
 */
@Stateless
public class UserFacade extends AbstractFacade<User> {

    @PersistenceContext(unitName = "com.ash_myblog23_war_1.0-SNAPSHOTPU")
    private EntityManager em;

    @Override
    protected EntityManager getEntityManager() {
        return em;
    }

    public UserFacade() {
        super(User.class);
    }

    public Number findLoggedUserId(String name) {
        try {
            return (Number) em.createQuery(
                    "SELECT u.id FROM User u WHERE u.username = :username")
                    .setParameter("username", name)
                    .getSingleResult();
        } catch (NoResultException e) {
            return null;
        }
    }

    public List<User> findById(Integer id) {
        List result = (List) em.createQuery(
                "SELECT u FROM User u WHERE u.id = :userid")
                .setParameter("userid", id)
                .setMaxResults(1)
                .getResultList();
        return result;
    }

    public List findByName(String name) {
        return em.createQuery(
                "SELECT u FROM User u WHERE u.username LIKE :username")
                .setParameter("username", name)
                .getResultList();
    }

    @Override
    public List<User> findAll() {
        return em.createQuery("SELECT u FROM User u ORDER BY u.userEmail ASC")
                .getResultList();
    }

    public void editUserPassword(String username, String hash) {
        em.createNativeQuery("UPDATE users SET password=?1 WHERE username=?2")
                .setParameter(1, hash)
                .setParameter(2, username)
                .executeUpdate();
    }

    public void updateUserProfile(Integer id, String avatar, String email) {
        em.createNativeQuery("UPDATE users SET user_avatar=?1, user_email=?2 WHERE id=?3")
                .setParameter(1, avatar)
                .setParameter(2, email)
                .setParameter(3, id)
                .executeUpdate();
    }
}
